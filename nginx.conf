# events {
#     worker_connections 1024;
# }

# http {
#     upstream webrtc_backend {
#         server webrtc-app:9000;
#     }

#     server {
#         listen 80;
#         server_name your-domain.com;

#         location / {
#             proxy_pass http://webrtc_backend;
#             proxy_http_version 1.1;
#             proxy_set_header Upgrade $http_upgrade;
#             proxy_set_header Connection 'upgrade';
#             proxy_set_header Host $host;
#             proxy_cache_bypass $http_upgrade;
#         }
#     }
# }



# events {
#     worker_connections 1024;
# }

# http {
#     upstream webrtc_backend {
#         server webrtc-app:9000;
#     }

#     server {
#         listen 80;
#         server_name your-domain.com;
#         return 301 https://$server_name$request_uri;
#     }

#     server {
#         listen 443 ssl;
#         server_name your-domain.com;

#         ssl_certificate /etc/nginx/certs/certificate.crt;
#         ssl_certificate_key /etc/nginx/certs/private.key;
#         ssl_protocols TLSv1.2 TLSv1.3;
#         ssl_ciphers HIGH:!aNULL:!MD5;

#         location / {
#             proxy_pass http://webrtc_backend;
#             proxy_http_version 1.1;
#             proxy_set_header Upgrade $http_upgrade;
#             proxy_set_header Connection 'upgrade';
#             proxy_set_header Host $host;
#             proxy_cache_bypass $http_upgrade;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }
#     }
# }



events {
    worker_connections 1024;
}

http {
    upstream webrtc_backend {
        server webrtc-app:9000;
    }

    server {
        listen 80;
        server_name localhost;
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl;
        server_name localhost;

        ssl_certificate /etc/nginx/certs/certificate.crt;
        ssl_certificate_key /etc/nginx/certs/private.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        location / {
            proxy_pass http://webrtc_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}